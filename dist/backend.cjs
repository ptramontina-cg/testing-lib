"use strict";var F=Object.create;var c=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var k=Object.getPrototypeOf,E=Object.prototype.hasOwnProperty;var I=(r,e)=>{for(var t in e)c(r,t,{get:e[t],enumerable:!0})},h=(r,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of x(e))!E.call(r,i)&&i!==t&&c(r,i,{get:()=>e[i],enumerable:!(o=M(e,i))||o.enumerable});return r};var y=(r,e,t)=>(t=r!=null?F(k(r)):{},h(e||!r||!r.__esModule?c(t,"default",{value:r,enumerable:!0}):t,r)),P=r=>h(c({},"__esModule",{value:!0}),r);var S={};I(S,{CreativeValidator:()=>w});module.exports=P(S);var p=class{constructor(e){this.file=e}async validate(){return console.log(this.file),!0}};var f=class{constructor(e){this.url=e}async validate(){return console.log(this.url),!0}};var b=y(require("fluent-ffmpeg"),1),V=y(require("stream-buffers"),1),n=require("fs"),m=y(require("path"),1),v=class{constructor(){}getResolutionQuality(e,t){return e>=3840&&t>=2160?"4K":e>=2048&&t>=1080?"2K":e>=1920&&t>=1080?"Full HD":e>=1280&&t>=720?"HD":"SD"}test(){console.log("test from here"),console.log(n.promises)}async generateThumbnail(e){return await new Promise(async(t,o)=>{let i=m.default.join(__dirname,"tmp"),s=m.default.join(i,`temp_${Date.now()}`),l=m.default.join(i,`screenshot_${Date.now()}.png`);await n.promises.mkdir(i,{recursive:!0}),await n.promises.writeFile(s,e.buffer),(0,b.default)(s).on("error",async a=>{console.error("Error generating screenshot:",a),o(a)}).on("end",async()=>{try{let a=await n.promises.readFile(l);await n.promises.unlink(s).catch(()=>{}),await n.promises.unlink(l).catch(()=>{}),t(a)}catch(a){o(a)}}).screenshots({timestamps:["50%"],filename:m.default.basename(l),folder:i})})}async analyzeMediaBuffer(e){return new Promise((t,o)=>{let i=new V.default.ReadableStreamBuffer({frequency:10,chunkSize:2048});i.put(e.buffer),i.stop(),(0,b.default)(i).ffprobe(async(s,l)=>{if(s){o(s);return}let a=l.streams.find(d=>d.codec_type==="video"||d.codec_type==="image");if(!a){o(new Error("No video or image stream found"));return}let u={type:a.codec_type+"",resolution:{width:a.width,height:a.height},format:l.format.format_name+""};if(e.mimetype.startsWith("video")){u.durationInSeconds=a.duration?Math.floor(parseFloat(a.duration)):void 0,u.bitRate=Math.floor(parseInt(a.bit_rate+"")/1024),u.resolution.quality=this.getResolutionQuality(parseInt(a.width+""),parseInt(a.height+""));let d=await this.generateThumbnail(e);u.thumbnail=d}t(u)})})}};var g=class{constructor(e){this.file=e}async validate(){let t=await new v().analyzeMediaBuffer(this.file);return console.log("video is valid in backend!"),!1}};var w=class{async validate(e,t){if((e==="image"||e==="video")&&!this.isMulterFile(t))throw new Error("Invalid type for backend validation.");if(e==="vast"&&!(t instanceof String))throw new Error("Invalid type for backend validation.");switch(e){case"image":return await this.validateImage(t);case"video":return await this.validateVideo(t);case"vast":return await this.validateVast(t)}}isMulterFile(e){return"buffer"in e&&"originalname"in e&&"mimetype"in e&&"size"in e}async validateVideo(e){return await new g(e).validate()}async validateImage(e){return await new p(e).validate()}async validateVast(e){return await new f(e).validate()}};0&&(module.exports={CreativeValidator});
